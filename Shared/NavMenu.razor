@using BlazorProject.Service.IService
@using BlazorBootstrap

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorProject</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView Roles="Individual User">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="attendance" @onclick="() => GetDuration()">
                    <span class="oi oi-person" aria-hidden="true"></span> Attendance
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="taskRecord" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">
                    <span class="oi oi-document" aria-hidden="true"></span> Task
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin,Individual User">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="taskStatus">
                    <span class="oi oi-grid-four-up" aria-hidden="true"></span> Task Status
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="leaveType" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">
                    <span class="oi oi-layers" aria-hidden="true"></span> Leave Type
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="leaveManagement" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">
                    <span class="oi oi-medical-cross" aria-hidden="true"></span> Leave Management
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Individual User">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="leaveBalance" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">
                    <span class="oi oi-medical-cross" aria-hidden="true"></span> Leave Balance
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Individual User">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="applyLeave">
                    <span class="oi oi-moon" aria-hidden="true"></span> Apply Leave
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="leaveNotification" @onclick="async () => await ShowSpinnerAsync(SpinnerColor.Primary)">
                    <span class="oi oi-bell" aria-hidden="true"></span> Leave Notification
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="attendanceStatusLineChart">
                    <span class="oi oi-graph" aria-hidden="true"></span> Attendance Status
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="attendanceStatusPieChart">
                    <span class="oi oi-pie-chart" aria-hidden="true"></span> Today Attendance Status
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="department">
                    <span class="oi oi-elevator" aria-hidden="true"></span> Department Management
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="userDepartmentPackageManagement">
                    <span class="oi oi-bug" aria-hidden="true"></span> Dep.Package Management
                </NavLink>
            </div>
        </AuthorizeView>
        <AuthorizeView Roles="Admin">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="salaryCredit">
                    <span class="oi oi-euro" aria-hidden="true"></span> Salary Credit
                </NavLink>
            </div>
        </AuthorizeView>
    </nav>
</div>
<Preload />

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    [Inject]
    protected IUserService userService { get; set; }
    [Inject]
    protected PreloadService PreloadService { get; set; }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected async Task GetDuration()
    {
        await ShowSpinnerAsync(SpinnerColor.Primary);
        userService.GetDuration();
    }

    private async Task ShowSpinnerAsync(SpinnerColor spinnerColor)
    {
        PreloadService.Show(spinnerColor);

        await Task.Delay(500); // call the service/api

        PreloadService.Hide();
    }
}
